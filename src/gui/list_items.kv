#:import MDDropdownMenu kivymd.menu.MDDropdownMenu

<LeftRightIconListItem>:
    left_icon: left_icon
    right_icon: right_icon
    IconLeftWidget:
        id: left_icon
    IconRightWidget:
        id: right_icon

<IconLeftWidget>:
    icon: "plus"

<IconRightWidget>:
    icon: "plus"

<FoodListItem>:
    id: food
    food_fields: { "cal": cal, "amount": amount }
    measurement_choose_button: measurement_choose_button
    size_hint: (1, None)
    height: dp(62)
    canvas:
        Color:
            rgba: self.theme_cls.divider_color if root.divider is not None else (0, 0, 0, 0)
        Line:
            points: (root.x ,root.y, root.x+self.width, root.y) if root.divider == 'Full' else (root.x+root._txt_left_pad, root.y, root.x+self.width-root._txt_left_pad-root._txt_right_pad, root.y)
    BoxLayout:
        id: _text_container
        orientation: 'horizontal'
        pos: root.pos
        padding: root._txt_left_pad, root._txt_top_pad, root._txt_right_pad, root._txt_bot_pad
        spacing: 10
        size: self.size
        MDLabel:
            id: _lbl_primary
            text: root.text
            font_style: root.font_style
            theme_text_color: root.theme_text_color
            text_color: root.text_color
            valign: "middle"
        MyTextField:
            id: cal
            name: "cal"
            type: "float"
            hint_text: "Calories"
            input_filter: "float"
            helper_text_mode: "none"
            size_hint: (0.25, 0.9)
            text: "100"
            on_text_validate: food.on_cal_change(self, self.text)
        MyTextField:
            id: amount
            name: "amount"
            type: "float"
            hint_text: "Amount"
            input_filter: "float"
            helper_text_mode: "none"
            size_hint: (0.25, 0.9)
            text: "100"
            on_text_validate: food.on_amount_change(self, self.text)
        MDFlatButton:
            id: measurement_choose_button
            text: 'Grams (1g)'
            size_hint: (0.6, 1)
            height: self.parent.height
            on_release: MDDropdownMenu(items=food.menu_items, width_mult=4).open(self)

        MDIconButton:
            id: measurement_add_button
            pos_hint: {"top": 0.9}
            icon: 'plus'
            on_press: food.add_measurement()

        MDIconButton:
            id: food_delete_button
            pos_hint: {"top": 0.9}
            icon: 'delete'
            on_press: food.delete_food()


<RightCheckboxListItem>:
    id: training_plan
    checkbox: checkbox
    MyMDCheckboxRightWidget:
        id: checkbox

<RightIconCheckboxListItem>:
    _touchable_widgets: [icon_button, checkbox]
    checkbox: checkbox
    icon_button: icon_button
    BoxLayout:
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width * 2
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)
        MDIconButton:
            id: icon_button
            icon: root.icon
    BoxLayout:
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)
        MyMDCheckbox:
            id: checkbox












